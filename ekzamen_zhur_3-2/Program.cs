using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ekzamen_zhur_3_2
{
    class Program
    {
        static void Main(string[] args)
        {
            List<Client> clients = new List<Client>();
            Client currentClient = null;

            int clientNum = 1;

            // переменная, которая будет хранить команду пользователя 
            string userCommand = "";

            Console.WriteLine("=============================================================================================");
            Console.WriteLine("Список команд:\n");
            Console.WriteLine("- список клиентов: посмотреть список клиентов и выбрать текущего клиента");
            Console.WriteLine("- добавить клиента: добавить клиента в список клиентов");
            Console.WriteLine("- добавить недвижимость: добавить недвижимость текущему клиенту");
            Console.WriteLine("- стоимость: общая стоимость недвижимости текущего клиента");
            Console.WriteLine("- информация: информация о текущем клиенте");
            Console.WriteLine("- выход: прекращение работы программы");
            Console.WriteLine("=============================================================================================");

            while (true) // вечный цикл 
            {
                // ввод команды 
                Console.Write("\nВведите команду: --> ");

                // получение строки (команды) от пользователя 
                userCommand = Console.ReadLine();
                // обработка команды
                switch (userCommand)
                {
                    case "добавить клиента":
                        {
                            Console.WriteLine("\n=============================================================================================");
                            Console.Write("Введите ФИО клиента:\n--> ");
                            // получаем строку введенную пользователем 
                            string clientName = Console.ReadLine();
                            // передаем имя клиента
                            Client client = new Client(clientNum, clientName);
                            clientNum++;
                            clients.Add(client);
                            currentClient = client;
                            // сообщаем о создании 
                            Console.WriteLine("Клиент успешно добавлен в базу");
                            Console.WriteLine("=============================================================================================");

                            break;
                        }
                    case "список клиентов":
                        {
                            if (clients.Count == 0)
                            {
                                Console.WriteLine("\n=============================================================================================");
                                Console.WriteLine("Вы пока не добавили ни одного клента. Чтобы добавить клиента, введите \"добавить клиента\"");
                                Console.WriteLine("=============================================================================================");

                                break;
                            }

                            Console.WriteLine("\n=============================================================================================");
                            foreach (Client client in clients)
                            {
                                Console.WriteLine($"{client.getNum} - {client.getName}");
                            }

                            Console.Write("\nВыберите текущего клиента: --> ");
                            int num = Convert.ToInt32(Console.ReadLine());

                            currentClient = clients[num - 1];

                            Console.WriteLine("=============================================================================================");

                            break;
                        }
                    case "добавить недвижимость":
                        {
                            if (clients.Count == 0)
                            {
                                Console.WriteLine("\n=============================================================================================");
                                Console.WriteLine("Вы пока не добавили ни одного клента. Чтобы добавить клиента, введите \"добавить клиента\"");
                                Console.WriteLine("=============================================================================================");

                                break;
                            }

                            Console.WriteLine("\n=============================================================================================");

                            Console.Write("Введите тип недвижимости:\n--> ");
                            string type = Console.ReadLine();

                            Console.Write("Введите адрес недвижимости:\n--> ");
                            string adress = Console.ReadLine();

                            Console.Write("Введите цену недвижимости(в долларах):\n--> ");
                            int price = Convert.ToInt32(Console.ReadLine());

                            currentClient.addRealEstate(type, adress, price);

                            Console.WriteLine("Недвижимость успешно добавлена");
                            Console.WriteLine("=============================================================================================");

                            break;
                        }
                    case "стоимость":
                        {
                            if (clients.Count == 0)
                            {
                                Console.WriteLine("\n=============================================================================================");
                                Console.WriteLine("Вы пока не добавили ни одного клента. Чтобы добавить клиента, введите \"добавить клиента\"");
                                Console.WriteLine("=============================================================================================");

                                break;
                            }

                            Console.WriteLine("\n=============================================================================================");
                            Console.WriteLine($"Общая стоимость недвижимости клиента {currentClient.getName}: {currentClient.realEstatePrice} $");
                            Console.WriteLine("=============================================================================================");

                            break;
                        }
                    case "информация":
                        {
                            if (clients.Count == 0)
                            {
                                Console.WriteLine("\n=============================================================================================");
                                Console.WriteLine("Вы пока не добавили ни одного клента. Чтобы добавить клиента, введите \"добавить клиента\"");
                                Console.WriteLine("=============================================================================================");

                                break;
                            }

                            Console.WriteLine("\n=============================================================================================");
                            Console.WriteLine($"Информация о клиенте:\n{currentClient.Info()}");
                            Console.WriteLine("=============================================================================================");

                            break;
                        }
                    // если пользователь введет "помощь" 
                    case "помощь":
                        {
                            Console.WriteLine("\n=============================================================================================");
                            Console.WriteLine("Список команд:\n");
                            Console.WriteLine("- список клиентов: посмотреть список клиентов и выбрать текущего клиента");
                            Console.WriteLine("- добавить клиента: добавить клиента в список клиентов");
                            Console.WriteLine("- добавить недвижимость: добавить недвижимость текущему клиенту");
                            Console.WriteLine("- стоимость: общая стоимость недвижимости текущего клиента");
                            Console.WriteLine("- информация: информация о текущем клиенте");
                            Console.WriteLine("- выход: прекращение работы программы");
                            Console.WriteLine("=============================================================================================");

                            break;
                        }
                    // выход из программы
                    case "выход":
                        {
                            // программа завершит свое выполнение 
                            return;
                        }
                    // если команду определить не удалось 
                    default:
                        {
                            Console.WriteLine("\n=============================================================================================");
                            Console.WriteLine("Ваша команда не определена. Попобуйте ещё раз");
                            Console.WriteLine("Для вывода списка команд введите команду \"помощь\"");
                            Console.WriteLine("Для завершения программы введите команду \"выход\"");
                            Console.WriteLine("=============================================================================================");

                            break;
                        }
                }
            }
        }
    }
}
